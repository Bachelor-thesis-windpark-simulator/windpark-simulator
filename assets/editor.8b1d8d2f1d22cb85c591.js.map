{"version":3,"sources":["webpack://future-mobility/./node_modules/events/events.js","webpack://future-mobility/./src/sass/default.scss?bcb6","webpack://future-mobility/./src/js/aux/array-2d.js","webpack://future-mobility/./src/js/city.js","webpack://future-mobility/./src/js/editor/city-browser.js","webpack://future-mobility/./src/js/editor/map-editor-palette.js","webpack://future-mobility/./src/js/editor/map-editor.js","webpack://future-mobility/./src/js/editor/modal-export.js","webpack://future-mobility/./src/js/editor/modal-import.js","webpack://future-mobility/./src/js/editor/modal-load.js","webpack://future-mobility/./src/js/editor/modal-save.js","webpack://future-mobility/./src/js/editor/object-store.js","webpack://future-mobility/./src/js/emissions-variable.js","webpack://future-mobility/./src/js/grid.js","webpack://future-mobility/./src/js/map-view.js","webpack://future-mobility/./src/js/modal.js","webpack://future-mobility/./src/js/server-socket-connector.js","webpack://future-mobility/./src/js/textures-roads.js","webpack://future-mobility/./src/js/variable-view.js","webpack://future-mobility/webpack/bootstrap","webpack://future-mobility/webpack/runtime/compat get default export","webpack://future-mobility/webpack/runtime/define property getters","webpack://future-mobility/webpack/runtime/global","webpack://future-mobility/webpack/runtime/hasOwnProperty shorthand","webpack://future-mobility/webpack/runtime/make namespace object","webpack://future-mobility/webpack/runtime/publicPath","webpack://future-mobility/./src/js/main-editor.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AChfA;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B,uBAAuB,IAAI;AAC3B,cAAc;AACd;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB;AAClB;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChH0B;AACW;;AAEtB;AACf;AACA,mBAAmB,0CAAI;AACvB;;AAEA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB;AACA;AACA,8BAA8B,2DAAgB;AAC9C;AACA,WAAW,gBAAgB;;AAE3B;AACA,kBAAkB,0DAAe;AACjC,QAAQ,wDAAa;AACrB,QAAQ,2DAAgB;AACxB;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjC2B;;AAEZ;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,iBAAiB,mDAAa;AAC9B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;;;;;;;;;;;;;;;AC9DkC;;AAEnB;AACf;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAY;;AAElC;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sCAAsC,GAAG;AACzC;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA,gCAAgC,YAAY;AAC5C,OAAO;AACP;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;ACrF2B;AACO;AACkB;AACf;AACA;AACI;AACA;AACA;;AAE1B;AACf;AACA;AACA;AACA;;AAEA,uBAAuB,8CAAO;AAC9B;;AAEA,uBAAuB,wDAAgB;;AAEvC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB;AACnE,4CAA4C,yBAAyB;AACrE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL,2BAA2B,kDAAW;AACtC;AACA;AACA,0BAA0B,gDAAS;AACnC;AACA;AACA;AACA,2BAA2B,mDAAa;AACxC;AACA,SAAS;AACT,OAAO;AACP;AACA,0BAA0B,gDAAS;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,0BAA0B,kDAAW;AACrC;AACA;AACA,2BAA2B,mDAAa;AACxC;AACA,SAAS;AACT,OAAO;AACP;AACA,0BAA0B,kDAAW;AACrC;AACA,OAAO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACjF6B;;AAEd,0BAA0B,2CAAK;AAC9C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;;;;;;;;;ACzB6B;;AAEd,0BAA0B,2CAAK;AAC9C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvC6B;AACY;;AAE1B,wBAAwB,2CAAK;AAC5C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,uBAAuB,kDAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzC6B;AACY;;AAE1B,wBAAwB,2CAAK;AAC5C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,uBAAuB,kDAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzCe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,EAAE;AACZ;AACA;AACA;;AAEA;AACA;AACA,UAAU,EAAE;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnEkC;AACR;;AAEX;AACf;AACA;AACA;AACA,oBAAoB,0CAAI;AACxB,sBAAsB,+CAAY;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;ACxCkC;AACG;;AAErC;AACA;AACA;AACe;AACf;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,0BAA0B,yDAAc;AACxC,sBAAsB,+CAAY;AAClC;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,cAAc;AACd;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,IAAI,uDAAY;AAChB;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,wDAAa;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7KA;AACkC;AAC8B;;AAEhE;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAY;;AAElC;AACA;;AAEA;AACA,mCAAmC,uBAAuB,EAAE;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,6BAA6B,4DAAY,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,yBAAyB;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACrGe;AACf;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3DA;AACkC;;AAElC;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA,sBAAsB,+CAAY;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gDAAgD,sBAAsB;AACtE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IwD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAExD;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;ACpC5B;;AAEA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCvCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kC;;;;;;;;;;;;;;;;;;ACfA;AAC0B;AAC2B;AACT;AACD;AACb;AACc;AACkB;;AAE9D,SAAS,uBAA2B,CAAC,WAAW,oBAAoB;AACpE;AACA;AACA;AACA,qBAAqB,0CAAI;AACzB,0BAA0B,wDAAiB;;AAE3C;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,oDAAY;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,oDAAY;AACnC;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,0BAA0B,uDAAS;AACnC;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,mDAAY;AACxC;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,6DAAqB,CAAC,qBAA6B;AAC/E;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG","file":"editor.8b1d8d2f1d22cb85c591.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport {};","/**\n * This class provides helper functions to work with 2D arrays.\n * (arrays of arrays)\n */\nexport default class Array2D {\n  /**\n   * Create and initialize a 2D Array\n   *\n   * @param width {number} Number of columns (inner arrays size)\n   * @param height {number} Number of rows (outer array size)\n   * @param initValue {any} Initial value for inner array items\n   * @return {any[][]}\n   */\n  static create(width, height, initValue = 0) {\n    const rows = [];\n    for (let i = 0; i < height; i += 1) {\n      const row = [];\n      for (let j = 0; j < width; j += 1) {\n        row[j] = initValue;\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n\n  /**\n   * Creates a 2D array from a 1D array in cells[y * width + x] format\n   *\n   * @param width {number}\n   * @param height {number}\n   * @param cells {any[]}\n   */\n  static fromFlat(width, height, cells) {\n    const answer = Array2D.create(width, height);\n    for (let x = 0; x < width; x += 1) {\n      for (let y = 0; y < height; y += 1) {\n        answer[y][x] = cells[y * width + x];\n      }\n    }\n    return answer;\n  }\n\n  /**\n   * Returns true if the argument is an array of arrays and every inner\n   * array has the same length.\n   *\n   * @param a {any[][]}\n   * @return {boolean}\n   */\n  static isValid(a) {\n    return Array.isArray(a) && a.length > 0\n      && Array.isArray(a[0]) && a[0].length > 0\n      && a.every(row => row.length === a[0].length);\n  }\n\n  /**\n   * Returns the size of a 2D array as [width, height]\n   *\n   * Assumes the argument is a valid 2D Array.\n   *\n   * @param a {any[][]}\n   * @return {number[]}\n   */\n  static size(a) {\n    return [a[0].length, a.length];\n  }\n\n  /**\n   * Clones the 2D Array.\n   *\n   * Assumes the argument is a valid 2D Array. The items in the 2D\n   * array are not deep copied, only the outer and inner arrays.\n   *\n   * @param a {any[][]}\n   * @return {any[][]}\n   */\n  static clone(a) {\n    return a.map(row => Array.from(row));\n  }\n\n  /**\n   * Copies the contents of a 2D array into another.\n   *\n   * Assumes the arguments are valid 2D arrays with the same size.\n   *\n   * @param src {any[][]}\n   * @param dest {any[][]}\n   */\n  static copy(src, dest) {\n    for (let i = 0; i < src.length; i += 1) {\n      for (let j = 0; j < src[i].length; j += 1) {\n        // eslint-disable-next-line no-param-reassign\n        dest[i][j] = src[i][j];\n      }\n    }\n  }\n\n  /**\n   * Returns all items as a flat array of [x, y, value] arrays.\n   *\n   * @param a {any[][]}\n   * @return {[number, number, any][]}\n   */\n  static items(a) {\n    const items = [];\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        items.push([x, y, a[y][x]]);\n      }\n    }\n    return items;\n  }\n}\n","import Grid from './grid';\nimport Array2D from './aux/array-2d';\n\nexport default class City {\n  constructor(width, height, cells = null) {\n    this.map = new Grid(width, height, cells);\n  }\n\n  toJSON() {\n    const { map } = this;\n    return {\n      map: map.toJSON(),\n    };\n  }\n\n  static fromJSON(jsonObject) {\n    const { map } = jsonObject;\n    if (Array.isArray(map)) {\n      // Support old serialization format\n      return new City(16, 16, Array2D.fromFlat(16, 16, map.map(v => Number(v))));\n    }\n    const { width, height } = map;\n\n    // Support old serialization format\n    const cells = Array2D.isValid(map.cells)\n      ? Array2D.clone(map.cells)\n      : Array2D.fromFlat(width, height, map.cells.map(v => Number(v)));\n    return new City(width, height, cells);\n  }\n\n  copy(city) {\n    this.map.copy(city.map);\n  }\n}\n","import City from '../city';\n\nexport default class CityBrowser {\n  constructor($element, config, cityStore, saveMode = false) {\n    this.$element = $element;\n    this.config = config;\n    this.$selectedButton = null;\n    this.selectedData = null;\n\n    this.$element.addClass('city-browser');\n\n    const setSelection = (button) => {\n      if (this.$selectedButton) {\n        this.$selectedButton.removeClass('selected');\n      }\n      this.$selectedButton = $(button);\n      this.$selectedButton.addClass('selected');\n    };\n\n    const buttons = Object.entries(\n      saveMode ? cityStore.getAllUserObjects() : cityStore.getAllObjects()\n    ).map(([id, cityJSON]) => $('<div></div>')\n      .addClass(['col-6', 'col-md-2', 'mb-3'])\n      .append(\n        $('<button></button>')\n          .addClass('city-browser-item')\n          .append(this.createPreviewImage(cityJSON))\n          .on('click', (ev) => {\n            setSelection(ev.currentTarget);\n            this.selectedData = id;\n          })\n      ));\n\n    if (saveMode) {\n      buttons.unshift($('<div></div>')\n        .addClass(['col-6', 'col-md-2', 'mb-3'])\n        .append($('<button></button>')\n          .addClass('city-browser-item-new')\n          .on('click', (ev) => {\n            setSelection(ev.currentTarget);\n            this.selectedData = 'new';\n          })));\n    }\n\n    this.$element.append($('<div class=\"row\"></div>').append(buttons));\n  }\n\n  createPreviewImage(cityJSON) {\n    const $canvas = $('<canvas class=\"city-browser-item-preview\"></canvas>')\n      .attr({\n        width: this.config.cityWidth,\n        height: this.config.cityHeight,\n      });\n    const city = City.fromJSON(cityJSON);\n    const ctx = $canvas[0].getContext('2d');\n    city.map.allCells().forEach(([i, j, value]) => {\n      ctx.fillStyle = (this.config.tileTypes && this.config.tileTypes[value].color) || '#000000';\n      ctx.fillRect(i, j, 1, 1);\n    });\n\n    return $canvas;\n  }\n}\n","import EventEmitter from 'events';\n\nexport default class MapEditorPalette {\n  constructor($element, config) {\n    this.$element = $element;\n    this.config = config;\n    this.activeButton = null;\n    this.tileId = null;\n    this.events = new EventEmitter();\n\n    this.$element.addClass('map-editor-palette');\n\n    this.buttons = Object.entries(config.tileTypes).map(([id, typeCfg]) => $('<button></button>')\n      .attr({\n        type: 'button',\n        title: typeCfg.name,\n      })\n      .addClass([\n        'editor-palette-button',\n        'editor-palette-button-tile',\n        `editor-palette-button-tile-${id}`,\n      ])\n      .css({\n        backgroundColor: typeCfg.color,\n        backgroundImage: `url(${typeCfg.editorIcon})`,\n      })\n      .on('click', (ev) => {\n        if (this.activeButton) {\n          this.activeButton.removeClass('active');\n        }\n        this.activeButton = $(ev.target);\n        this.activeButton.addClass('active');\n        this.tileId = Number(id);\n        this.events.emit('change', Number(id));\n      }));\n\n    this.buttons.push($('<div class=\"separator\"></div>'));\n\n    const actionButtons = MapEditorPalette.Actions.map(action => $('<button></button>')\n      .attr({\n        type: 'button',\n        title: action.title,\n      })\n      .addClass([\n        'editor-palette-button',\n        'editor-palette-button-action',\n        `editor-palette-button-action-${action.id}`,\n      ])\n      .css({\n        backgroundImage: `url(${action.icon})`,\n      })\n      .on('click', () => {\n        this.events.emit('action', action.id);\n      }));\n\n    this.buttons.push(...actionButtons);\n\n    this.$element.append(this.buttons);\n    if (this.buttons.length) {\n      this.buttons[0].click();\n    }\n  }\n}\n\nMapEditorPalette.Actions = [\n  {\n    id: 'load',\n    title: 'Load map',\n    icon: 'static/fa/folder-open-solid.svg',\n  },\n  {\n    id: 'save',\n    title: 'Save map',\n    icon: 'static/fa/save-solid.svg',\n  },\n  {\n    id: 'import',\n    title: 'Import map',\n    icon: 'static/fa/file-import-solid.svg',\n  },\n  {\n    id: 'export',\n    title: 'Export map',\n    icon: 'static/fa/file-export-solid.svg',\n  },\n];\n","import City from '../city';\nimport MapView from '../map-view';\nimport MapEditorPalette from './map-editor-palette';\nimport ModalLoad from './modal-load';\nimport ModalSave from './modal-save';\nimport ModalExport from './modal-export';\nimport ModalImport from './modal-import';\nimport ObjectStore from './object-store';\n\nexport default class MapEditor {\n  constructor($element, city, config, textures) {\n    this.$element = $element;\n    this.city = city;\n    this.config = config;\n\n    this.mapView = new MapView(city, config, textures);\n    this.displayObject = this.mapView.displayObject;\n\n    this.palette = new MapEditorPalette($('<div></div>').appendTo(this.$element), config);\n\n    this.tileType = this.palette.tileId;\n    this.palette.events.on('change', (tileType) => {\n      this.tileType = tileType;\n    });\n\n    this.palette.events.on('action', (id) => {\n      if (this.actionHandlers[id]) {\n        this.actionHandlers[id]();\n      }\n    });\n\n    let lastEdit = null;\n    this.mapView.events.on('action', ([x, y], props) => {\n      if (this.tileType) {\n        if (lastEdit && props.shiftKey) {\n          const [lastX, lastY] = lastEdit;\n          for (let i = Math.min(lastX, x); i <= Math.max(lastX, x); i += 1) {\n            for (let j = Math.min(lastY, y); j <= Math.max(lastY, y); j += 1) {\n              this.city.map.set(i, j, this.tileType);\n            }\n          }\n        } else {\n          this.city.map.set(x, y, this.tileType);\n        }\n        lastEdit = [x, y];\n      }\n    });\n\n    this.objectStore = new ObjectStore('./cities.json');\n    this.actionHandlers = {\n      load: () => {\n        const modal = new ModalLoad(this.config, this.objectStore);\n        modal.show().then((id) => {\n          const jsonCity = id && this.objectStore.get(id);\n          if (jsonCity) {\n            this.city.copy(City.fromJSON(jsonCity));\n          }\n        });\n      },\n      save: () => {\n        const modal = new ModalSave(this.config, this.objectStore);\n        modal.show().then((id) => {\n          if (id) {\n            this.objectStore.set(id === 'new' ? null : id, this.city.toJSON());\n          }\n        });\n      },\n      import: () => {\n        const modal = new ModalImport();\n        modal.show().then((importedData) => {\n          if (importedData) {\n            this.city.copy(City.fromJSON(importedData));\n          }\n        });\n      },\n      export: () => {\n        const modal = new ModalExport(JSON.stringify(this.city));\n        modal.show();\n      },\n    };\n  }\n}\n","import Modal from '../modal';\n\nexport default class ModalExport extends Modal {\n  constructor(exportData) {\n    super({\n      title: 'Export map',\n    });\n\n    this.$dataContainer = $('<textarea class=\"form-control\"></textarea>')\n      .attr({\n        rows: 10,\n      })\n      .text(exportData)\n      .appendTo(this.$body);\n\n    this.$copyButton = $('<button></button>')\n      .addClass(['btn', 'btn-outline-dark', 'btn-copy', 'mt-2'])\n      .text('Copy to clipboard')\n      .on('click', () => {\n        this.$dataContainer[0].select();\n        document.execCommand('copy');\n        this.hide();\n      })\n      .appendTo(this.$footer);\n  }\n}\n","import Modal from '../modal';\n\nexport default class ModalImport extends Modal {\n  constructor() {\n    super({\n      title: 'Import map',\n    });\n\n    this.$dataContainer = $('<textarea class=\"form-control\"></textarea>')\n      .attr({\n        rows: 10,\n        placeholder: 'Paste the JSON object here.',\n      })\n      .appendTo(this.$body);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$errorText = $('<p class=\"text-danger\"></p>')\n      .appendTo(this.$footer)\n      .hide();\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$copyButton = $('<button></button>')\n      .addClass(['btn', 'btn-primary'])\n      .text('Import')\n      .on('click', () => {\n        try {\n          const imported = JSON.parse(this.$dataContainer.val());\n          this.hide(imported);\n        } catch (err) {\n          this.showError(err.message);\n        }\n      })\n      .appendTo(this.$footer);\n  }\n\n  showError(errorText) {\n    this.$errorText.html(errorText);\n    this.$errorText.show();\n  }\n}\n","import Modal from '../modal';\nimport CityBrowser from './city-browser';\n\nexport default class ModalLoad extends Modal {\n  constructor(config, cityStore) {\n    super({\n      title: 'Load map',\n      size: 'lg',\n    });\n\n    this.$browserContainer = $('<div></div>')\n      .appendTo(this.$body);\n    this.browser = new CityBrowser(this.$browserContainer, config, cityStore);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$cancelButton = $('<button></button>')\n      .addClass(['btn', 'btn-secondary'])\n      .text('Cancel')\n      .on('click', () => {\n        this.hide(null);\n      })\n      .appendTo(this.$footer);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$loadButton = $('<button></button>')\n      .addClass(['btn', 'btn-primary'])\n      .text('Load')\n      .on('click', () => {\n        try {\n          this.hide(this.browser.selectedData);\n        } catch (err) {\n          this.showError(err.message);\n        }\n      })\n      .appendTo(this.$footer);\n  }\n\n  showError(errorText) {\n    this.$errorText.html(errorText);\n    this.$errorText.show();\n  }\n}\n","import Modal from '../modal';\nimport CityBrowser from './city-browser';\n\nexport default class ModalSave extends Modal {\n  constructor(config, cityStore) {\n    super({\n      title: 'Save map',\n      size: 'lg',\n    });\n\n    this.$browserContainer = $('<div></div>')\n      .appendTo(this.$body);\n    this.browser = new CityBrowser(this.$browserContainer, config, cityStore, true);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$cancelButton = $('<button></button>')\n      .addClass(['btn', 'btn-secondary'])\n      .text('Cancel')\n      .on('click', () => {\n        this.hide(null);\n      })\n      .appendTo(this.$footer);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$saveButton = $('<button></button>')\n      .addClass(['btn', 'btn-primary'])\n      .text('Save')\n      .on('click', () => {\n        try {\n          this.hide(this.browser.selectedData);\n        } catch (err) {\n          this.showError(err.message);\n        }\n      })\n      .appendTo(this.$footer);\n  }\n\n  showError(errorText) {\n    this.$errorText.html(errorText);\n    this.$errorText.show();\n  }\n}\n","export default class ObjectStore {\n  constructor(fixedObjectsPath = null) {\n    this.fixedObjects = [];\n    this.userObjects = [];\n\n    this.loadUserObjects();\n    if (fixedObjectsPath) {\n      this.loadFixedObjects(fixedObjectsPath);\n    }\n  }\n\n  async loadFixedObjects(path) {\n    fetch(path, { cache: 'no-store' })\n      .then(response => response.json())\n      .then((data) => {\n        this.fixedObjects = data.cities;\n      });\n  }\n\n  loadUserObjects() {\n    const userObjects = JSON.parse(localStorage.getItem('futureMobility.cityStore.cities'));\n    if (userObjects) {\n      this.userObjects = userObjects;\n    }\n  }\n\n  saveLocal() {\n    localStorage.setItem('futureMobility.cityStore.cities', JSON.stringify(this.userObjects));\n  }\n\n  getAllObjects() {\n    return Object.assign(\n      {},\n      this.getAllUserObjects(),\n      this.getAllFixedObjects(),\n    );\n  }\n\n  getAllFixedObjects() {\n    return Object.fromEntries(this.fixedObjects.map((obj, i) => [\n      `F${i}`,\n      obj,\n    ]));\n  }\n\n  getAllUserObjects() {\n    return Object.fromEntries(this.userObjects.map((obj, i) => [\n      `L${i}`,\n      obj,\n    ]).reverse());\n  }\n\n  get(id) {\n    if (id[0] === 'F') {\n      return this.fixedObjects[id.substr(1)];\n    }\n    return this.userObjects[id.substr(1)];\n  }\n\n  set(id, obj) {\n    if (id === null || this.userObjects[id.substr(1)] === undefined) {\n      this.userObjects.push(obj);\n    } else {\n      this.userObjects[id.substr(1)] = obj;\n    }\n    this.saveLocal();\n  }\n}\n","import EventEmitter from 'events';\nimport Grid from './grid';\n\nexport default class EmissionsVariable {\n  constructor(city, config) {\n    this.city = city;\n    this.config = config;\n    this.grid = new Grid(this.city.map.width, this.city.map.height);\n    this.events = new EventEmitter();\n\n    this.city.map.events.on('update', this.handleCityUpdate.bind(this));\n    this.handleCityUpdate(this.city.map.allCells());\n  }\n\n  calculate(i, j) {\n    const emissions = (x, y) => (this.config.tileTypes[this.city.map.get(x, y)]\n      && this.config.tileTypes[this.city.map.get(x, y)].emissions)\n      || 0;\n\n    return Math.min(1, Math.max(0, emissions(i, j)\n      + this.city.map.nearbyCells(i, j, 1)\n        .reduce((sum, [x, y]) => sum + emissions(x, y) * 0.5, 0)\n      + this.city.map.nearbyCells(i, j, 2)\n        .reduce((sum, [x, y]) => sum + emissions(x, y) * 0.25, 0)));\n  }\n\n  handleCityUpdate(updates) {\n    const coords = [];\n    updates.forEach(([i, j]) => {\n      coords.push([i, j]);\n      coords.push(...this.city.map.nearbyCells(i, j, 1).map(([x, y]) => [x, y]));\n      coords.push(...this.city.map.nearbyCells(i, j, 2).map(([x, y]) => [x, y]));\n    });\n    // Todo: deduplicating coords might be necessary if the way calculations\n    //    and updates are handled is not changed\n    coords.forEach(([i, j]) => {\n      this.grid.set(i, j, this.calculate(i, j));\n    });\n    this.events.emit('update', coords);\n  }\n}\n","import EventEmitter from 'events';\nimport Array2D from './aux/array-2d';\n\n/**\n * Represents a 2D grid map that stores a single Number per cell\n */\nexport default class Grid {\n  /**\n   * Create a new grid\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {number[][]} cells\n   */\n  constructor(width, height, cells = null) {\n    this.width = width;\n    this.height = height;\n    this.cells = cells || Array2D.create(width, height, 0);\n    this.events = new EventEmitter();\n  }\n\n  /**\n   * Create a new Grid from a JSON string\n   *\n   * @param jsonObject {object} JSON object\n   * @return {Grid}\n   */\n  static fromJSON(jsonObject) {\n    const { width, height, cells } = jsonObject;\n    return new Grid(width, height, cells);\n  }\n\n  /**\n   * Serializes to a JSON object\n   * @return {{cells: number[][], width: number, height: number}}\n   */\n  toJSON() {\n    return {\n      width: this.width,\n      height: this.height,\n      cells: Array2D.clone(this.cells),\n    };\n  }\n\n  copy(grid) {\n    this.width = grid.width;\n    this.height = grid.height;\n    this.replace(grid.cells);\n  }\n\n  /**\n   * Retrieves the value at (x,y)\n   *\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  get(x, y) {\n    return this.cells[y][x];\n  }\n\n  /**\n   * Set the value at (x, y)\n   *\n   * @fires Grid.events#update\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} value\n   */\n  set(x, y, value) {\n    this.cells[y][x] = value;\n\n    /**\n     * Update event.\n     *\n     * Argument is an array of updated cells. Each updated cell is represented\n     * by an array with three elements: [x, y, value]\n     *\n     * @event Grid.events#update\n     * @type {[[number, number, number]]}\n     */\n    this.events.emit('update', [[x, y, value]]);\n  }\n\n  /**\n   * Backwards compatibility function that maps (x, y) to a single index in a flat array\n   * @deprecated\n   * @param x {number}\n   * @param y {number}\n   * @return {number}\n   */\n  offset(x, y) {\n    return y * this.width + x;\n  }\n\n  replace(cells) {\n    Array2D.copy(cells, this.cells);\n    this.events.emit('update', this.allCells());\n  }\n\n  /**\n   * Returns true if (x, y) are valid coordinates within the grid's bounds.\n   *\n   * @param {number} x\n   * @param {number} y\n   * @return {boolean}\n   */\n  isValidCoords(x, y) {\n    return x >= 0 && y >= 0 && x < this.width && y < this.height;\n  }\n\n  /**\n   * Returns all cells, represented as [x, y, value] arrays.\n   *\n   * @return {[[number, number, number]]}\n   */\n  allCells() {\n    return Array2D.items(this.cells);\n  }\n\n  /**\n   * Get cells adjacent to the cell at (i, j).\n   *\n   * Each cell is represented by an array of the form [i, j, value]\n   * A cell has at most four adjacent cells, which share one side\n   * (diagonals are not adjacent).\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {[[number, number, number]]}\n   */\n  adjacentCells(i, j) {\n    return [[i, j - 1], [i + 1, j], [i, j + 1], [i - 1, j]]\n      .filter(([x, y]) => this.isValidCoords(x, y))\n      .map(([x, y]) => [x, y, this.get(x, y)]);\n  }\n\n  /**\n   * Returns the cells around the cell at (i, j).\n   *\n   * Each cells returned is represented as an array [i, j, value].\n   * Cells \"around\" are those reachable by no less than <distance> steps in\n   * any direction, including diagonals.\n   *\n   * @param {number} i\n   * @param {number} j\n   * @param {number} distance\n   * @return {[[number, number, number]]}\n   */\n  nearbyCells(i, j, distance = 1) {\n    const coords = [];\n    // Top\n    for (let x = i - distance; x < i + distance; x += 1) {\n      coords.push([x, j - distance]);\n    }\n    // Right\n    for (let y = j - distance; y < j + distance; y += 1) {\n      coords.push([i + distance, y]);\n    }\n    // Bottom\n    for (let x = i + distance; x > i - distance; x -= 1) {\n      coords.push([x, j + distance]);\n    }\n    // Left\n    for (let y = j + distance; y > j - distance; y -= 1) {\n      coords.push([i - distance, y]);\n    }\n\n    return coords\n      .filter(([x, y]) => this.isValidCoords(x, y))\n      .map(([x, y]) => [x, y, this.get(x, y)]);\n  }\n}\n","/* globals PIXI */\nimport EventEmitter from 'events';\nimport PencilCursor from '../../static/fa/pencil-alt-solid.svg';\n\nconst ROAD_TILE = 1;\nconst TILE_SIZE = 120;\n\nexport default class MapView {\n  constructor(city, config, textures) {\n    this.displayObject = new PIXI.Container();\n    this.city = city;\n    this.config = config;\n    this.textures = textures;\n    this.events = new EventEmitter();\n\n    this.bgTiles = Array(this.city.map.width * this.city.map.height);\n    this.textureTiles = Array(this.city.map.width * this.city.map.height);\n\n    let pointerActive = false;\n    $(window).on('mouseup', () => { pointerActive = false; });\n\n    this.city.map.allCells().forEach(([i, j]) => {\n      const bgTile = new PIXI.Graphics();\n      bgTile.x = i * TILE_SIZE;\n      bgTile.y = j * TILE_SIZE;\n      bgTile.interactive = true;\n      bgTile.on('mousedown', (ev) => {\n        pointerActive = true;\n        this.events.emit('action', [i, j], {\n          shiftKey: ev.data.originalEvent.shiftKey,\n        });\n      });\n      bgTile.on('mouseover', (ev) => {\n        if (pointerActive) {\n          this.events.emit('action', [i, j], {\n            shiftKey: ev.data.originalEvent.shiftKey,\n          });\n        }\n      });\n      bgTile.cursor = `url(${PencilCursor}) 0 20, auto`;\n      this.bgTiles[this.city.map.offset(i, j)] = bgTile;\n\n      const textureTile = new PIXI.Sprite();\n      textureTile.x = i * TILE_SIZE;\n      textureTile.y = j * TILE_SIZE;\n      textureTile.width = TILE_SIZE;\n      textureTile.height = TILE_SIZE;\n      textureTile.roundPixels = true;\n      this.textureTiles[this.city.map.offset(i, j)] = textureTile;\n      this.renderTile(i, j);\n    });\n\n    this.displayObject.addChild(...this.bgTiles);\n    this.displayObject.addChild(...this.textureTiles);\n    this.city.map.events.on('update', this.handleCityUpdate.bind(this));\n    this.handleCityUpdate(this.city.map.allCells());\n  }\n\n  getBgTile(i, j) {\n    return this.bgTiles[this.city.map.offset(i, j)];\n  }\n\n  getTextureTile(i, j) {\n    return this.textureTiles[this.city.map.offset(i, j)];\n  }\n\n  renderTile(i, j) {\n    this.renderBasicTile(i, j);\n    if (this.city.map.get(i, j) === ROAD_TILE) {\n      this.renderRoadTile(i, j);\n    }\n  }\n\n  renderRoadTile(i, j) {\n    const connMask = [[i, j - 1], [i + 1, j], [i, j + 1], [i - 1, j]]\n      .map(([x, y]) => (!this.city.map.isValidCoords(x, y)\n      || this.city.map.get(x, y) === ROAD_TILE\n        ? '1' : '0')).join('');\n    this.getTextureTile(i, j).texture = this.textures[`road${connMask}`];\n    this.getTextureTile(i, j).visible = true;\n  }\n\n  renderBasicTile(i, j) {\n    const tileType = this.config.tileTypes[this.city.map.get(i, j)] || null;\n    this.getBgTile(i, j)\n      .clear()\n      .beginFill(tileType ? Number(`0x${tileType.color.substr(1)}`) : 0, 1)\n      .drawRect(0, 0, TILE_SIZE, TILE_SIZE)\n      .endFill();\n    this.getTextureTile(i, j).visible = false;\n  }\n\n  handleCityUpdate(updates) {\n    updates.forEach(([i, j]) => {\n      this.renderTile(i, j);\n      // Todo: This should be optimized so it's not called twice per frame for the same tile.\n      this.city.map.adjacentCells(i, j)\n        .filter(([x, y]) => this.city.map.get(x, y) === ROAD_TILE)\n        .forEach(([x, y]) => this.renderRoadTile(x, y));\n    });\n  }\n}\n","export default class Modal {\n  /**\n   * @param {object} options\n   *  Modal dialog options\n   * @param {string} options.title\n   *  Dialog title.\n   * @param {string} options.size\n   *  Modal size (lg or sm).\n   * @param {boolean} options.showCloseButton\n   *  Shows a close button in the dialog if true.\n   * @param {boolean} options.showFooter\n   *  Adds a footer area to the dialog if true.\n   */\n  constructor(options) {\n    this.returnValue = null;\n\n    this.$element = $('<div class=\"modal fade\"></div>');\n    this.$dialog = $('<div class=\"modal-dialog\"></div>').appendTo(this.$element);\n    this.$content = $('<div class=\"modal-content\"></div>').appendTo(this.$dialog);\n    this.$header = $('<div class=\"modal-header\"></div>').appendTo(this.$content);\n    this.$body = $('<div class=\"modal-body\"></div>').appendTo(this.$content);\n    this.$footer = $('<div class=\"modal-footer\"></div>').appendTo(this.$content);\n\n    this.$closeButton = $('<button type=\"button\" class=\"close\" data-dismiss=\"modal\">')\n      .append($('<span>&times;</span>'))\n      .appendTo(this.$header);\n\n    if (options.title) {\n      $('<h5 class=\"modal-title\"></h5>')\n        .html(options.title)\n        .prependTo(this.$header);\n    }\n    if (options.size) {\n      this.$dialog.addClass(`modal-${options.size}`);\n    }\n\n    if (options.showCloseButton === false) {\n      this.$closeButton.remove();\n    }\n    if (options.showFooter === false) {\n      this.$footer.remove();\n    }\n  }\n\n  async show() {\n    return new Promise((resolve) => {\n      $('body').append(this.$element);\n      this.$element.modal();\n      this.$element.on('hidden.bs.modal', () => {\n        this.$element.remove();\n        resolve(this.returnValue);\n      });\n    });\n  }\n\n  hide(returnValue) {\n    this.returnValue = returnValue;\n    this.$element.modal('hide');\n  }\n}\n","/* eslint-disable no-console */\nimport EventEmitter from 'events';\n\nconst PING_TIME = 1000 * 10;\nconst PONG_WAIT_TIME = 1000 * 10;\nconst RECONNECT_TIME = 1000 * 10;\n\nexport default class ServerSocketConnector {\n  constructor(uri) {\n    this.uri = uri;\n    this.ws = null;\n    this.connected = false;\n    this.events = new EventEmitter();\n    this.pingTimeout = null;\n    this.pongWaitTimeout = null;\n    this.reconnectTimeout = null;\n    this.connect();\n  }\n\n  connect() {\n    this.cancelPing();\n    this.cancelReconnect();\n\n    console.log(`Connecting to ${this.uri}...`);\n    this.ws = new WebSocket(this.uri);\n    this.ws.onopen = this.handleOpen.bind(this);\n    this.ws.onclose = this.handleClose.bind(this);\n    this.ws.onmessage = this.handleMessage.bind(this);\n    // ws.onerror is not handled because the event gives no data about the\n    // error, and on a connection failure onclose will be called.\n\n    this.connected = false;\n  }\n\n  cancelReconnect() {\n    if (this.reconnectTimeout !== null) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = null;\n    }\n  }\n\n  reconnect() {\n    this.cancelReconnect();\n    this.reconnectTimeout = setTimeout(() => {\n      this.reconnectTimeout = null;\n      this.connect();\n    }, RECONNECT_TIME);\n    console.log(`Will attempt to reconnect in ${RECONNECT_TIME / 1000} seconds...`);\n  }\n\n  handleOpen() {\n    this.cancelReconnect();\n\n    this.connected = true;\n    console.log('Connected.');\n    this.events.emit('connect');\n    this.schedulePing();\n  }\n\n  handleClose(ev) {\n    this.connected = false;\n    this.cancelPing();\n    // ev.code is defined here https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n    // but according to people the only code one normally gets is 1006 (Abnormal Closure)\n    console.log(\n      `Disconnected with code ${ev.code}`,\n      ev.code === 1006 ? ': Abnormal closure' : '',\n      ev.reason ? `(reason: ${ev.reason})` : ''\n    );\n    this.events.emit('disconnect');\n    this.reconnect();\n  }\n\n  handleMessage(ev) {\n    const message = JSON.parse(ev.data);\n    if (message.type === 'map_update') {\n      this.events.emit('map_update', message.cells);\n    }\n    else if (message.type === 'pong') {\n      this.handlePong();\n    }\n  }\n\n  handlePong() {\n    this.cancelPongWait();\n  }\n\n  send(data) {\n    this.cancelPing();\n    const message = typeof data === 'string' ? { type: data } : data;\n    this.ws.send(JSON.stringify(message));\n    this.schedulePing();\n  }\n\n  cancelPing() {\n    if (this.pingTimeout !== null) {\n      clearTimeout(this.pingTimeout);\n      this.pingTimeout = null;\n    }\n  }\n\n  schedulePing() {\n    this.cancelPing();\n    this.pingTimeout = setTimeout(() => {\n      this.pingTimeout = null;\n      this.ping();\n    }, PING_TIME);\n  }\n\n  cancelPongWait() {\n    if (this.pongWaitTimeout !== null) {\n      clearTimeout(this.pongWaitTimeout);\n      this.pongWaitTimeout = null;\n    }\n  }\n\n  startPongWait() {\n    this.pongWaitTimeout = setTimeout(() => {\n      this.pongWaitTimeout = null;\n      console.warn(`PONG not received after ${PONG_WAIT_TIME / 1000} seconds`);\n      console.warn('Closing connection');\n      this.ws.close();\n    }, PONG_WAIT_TIME);\n  }\n\n  ping() {\n    this.send('ping');\n    this.startPongWait();\n  }\n\n  getMap() {\n    this.send('get_map');\n  }\n\n  setMap(cells) {\n    this.send({\n      type: 'set_map',\n      cells,\n    });\n  }\n}\n","import road0000 from '../../static/tiles/road-0000.png';\nimport road0001 from '../../static/tiles/road-0001.png';\nimport road0010 from '../../static/tiles/road-0010.png';\nimport road0011 from '../../static/tiles/road-0011.png';\nimport road0100 from '../../static/tiles/road-0100.png';\nimport road0101 from '../../static/tiles/road-0101.png';\nimport road0110 from '../../static/tiles/road-0110.png';\nimport road0111 from '../../static/tiles/road-0111.png';\nimport road1000 from '../../static/tiles/road-1000.png';\nimport road1001 from '../../static/tiles/road-1001.png';\nimport road1010 from '../../static/tiles/road-1010.png';\nimport road1011 from '../../static/tiles/road-1011.png';\nimport road1100 from '../../static/tiles/road-1100.png';\nimport road1101 from '../../static/tiles/road-1101.png';\nimport road1110 from '../../static/tiles/road-1110.png';\nimport road1111 from '../../static/tiles/road-1111.png';\n\nconst RoadTextures = {\n  road0000,\n  road0001,\n  road0010,\n  road0011,\n  road0100,\n  road0101,\n  road0110,\n  road0111,\n  road1000,\n  road1001,\n  road1010,\n  road1011,\n  road1100,\n  road1101,\n  road1110,\n  road1111,\n};\n\nexport default RoadTextures;\n","/* globals PIXI */\n\nconst TILE_SIZE = 10;\n\nexport default class VariableView {\n  constructor(variable) {\n    this.displayObject = new PIXI.Container();\n    this.variable = variable;\n\n    this.tiles = Array(this.variable.grid.width * this.variable.grid.height);\n    this.variable.grid.allCells().forEach(([i, j]) => {\n      const newTile = new PIXI.Graphics();\n      newTile.x = i * TILE_SIZE;\n      newTile.y = j * TILE_SIZE;\n      this.tiles[this.variable.grid.offset(i, j)] = newTile;\n    });\n\n    this.displayObject.addChild(...this.tiles);\n    this.variable.events.on('update', this.handleUpdate.bind(this));\n    this.handleUpdate(this.variable.grid.allCells());\n  }\n\n  getTile(i, j) {\n    return this.tiles[this.variable.grid.offset(i, j)];\n  }\n\n  renderTile(i, j) {\n    this.getTile(i, j)\n      .clear()\n      .beginFill(0x953202, this.variable.grid.get(i, j))\n      .drawRect(0, 0, TILE_SIZE, TILE_SIZE)\n      .endFill();\n  }\n\n  handleUpdate(updates) {\n    updates.forEach(([i, j]) => {\n      this.renderTile(i, j);\n    });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/* globals PIXI */\nimport City from './city';\nimport EmissionsVariable from './emissions-variable';\nimport MapEditor from './editor/map-editor';\nimport VariableView from './variable-view';\nimport '../sass/default.scss';\nimport RoadTextures from './textures-roads';\nimport ServerSocketConnector from './server-socket-connector';\n\nfetch(`${process.env.SERVER_HTTP_URI}/config`, { cache: 'no-store' })\n  .then(response => response.json())\n  .then((config) => {\n    // const city = City.fromJSON(Cities.cities[0]);\n    const city = new City(config.cityWidth, config.cityHeight);\n    const emissions = new EmissionsVariable(city, config);\n\n    const app = new PIXI.Application({\n      width: 3840,\n      height: 1920,\n      backgroundColor: 0xf2f2f2,\n    });\n    Object.entries(RoadTextures).forEach(([id, path]) => {\n      app.loader.add(id, path);\n    });\n    app.loader.load((loader, resources) => {\n      $('[data-component=\"app-container\"]').append(app.view);\n      const textures = Object.fromEntries(\n        Object.entries(RoadTextures).map(([id]) => [id, resources[id].texture])\n      );\n\n      // Change the scaling mode for the road textures\n      Object.keys(textures).forEach((id) => {\n        textures[id].baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\n      });\n\n      // const mapView = new MapView(city, config, textures);\n      const mapView = new MapEditor($('body'), city, config, textures);\n      app.stage.addChild(mapView.displayObject);\n      mapView.displayObject.width = 1920;\n      mapView.displayObject.height = 1920;\n      mapView.displayObject.x = 0;\n      mapView.displayObject.y = 0;\n\n      const varViewer = new VariableView(emissions);\n      app.stage.addChild(varViewer.displayObject);\n      varViewer.displayObject.width = 960;\n      varViewer.displayObject.height = 960;\n      varViewer.displayObject.x = 1920 + 40;\n      varViewer.displayObject.y = 0;\n\n      const connector = new ServerSocketConnector(process.env.SERVER_SOCKET_URI);\n      connector.events.once('map_update', (cells) => {\n        city.map.replace(cells);\n        city.map.events.on('update', () => {\n          connector.setMap(city.map.cells);\n        });\n      });\n      connector.events.on('connect', () => {\n        connector.getMap();\n      });\n    });\n  })\n  .catch((err) => {\n    console.error('Error loading configuration');\n    console.error(err);\n  });\n"],"sourceRoot":""}